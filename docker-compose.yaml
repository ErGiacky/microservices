version: '3'
services:
#app python utenti
  apputenti:
    build:
      context: utenti/program/
      dockerfile: Dockerfile
    build:
      context: utenti/program/
      dockerfile: Dockerfile
    container_name: apputenti
    restart: on-failure
    #posso usare il nome del container per la build direttamente da dockerhub
    image: ergiacky/microservices:UtentiApp
        #130secondi prima di avviare il programma
    command:  sh -c "sleep 45s ; python3 ./app.py"
    command:  sh -c "sleep 45s ; python3 ./app.py"
    ports:
      - '5000:5000' #esposta la porta default di flask [5000]
    depends_on:
      - dbutenti  # prende come riferimento il dbutenti
    networks:
      - users #condividono la stessa rete
      #network divise per ogni coppia di microservizi
      #network divise per ogni coppia di microservizi
    
#db utenti mysql
  dbutenti:
    build:
      context: utenti/db/
      dockerfile: Dockerfile
    build:
      context: utenti/db/
      dockerfile: Dockerfile
    container_name: dbutenti
    image:  ergiacky/microservices:UtentiDb
    restart: on-failure #restart del container 
    environment:
      MYSQL_ROOT_PASSWORD: password #variabili da utilizzare dentro il db
      MYSQL_DATABASE: Utenti
      MYSQL_USER: sa
      MYSQL_PASSWORD: password 
    networks:
      - users

      #db libri
  dblibri:
    build:
      context: libri/db/
      dockerfile: Dockerfile
    build:
      context: libri/db/
      dockerfile: Dockerfile
    container_name: dblibri
    image: ergiacky/microservices:Dblibri 
    restart: on-failure 
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: Libri
      MYSQL_USER: sa
      MYSQL_PASSWORD: password  
    networks:
      - books

   #python libri
  applibri:
    build:
      context: libri/program/
      dockerfile: Dockerfile
    container_name: applibri
    image: ergiacky/microservizi:Applibri 
    restart: on-failure
    command:  sh -c "sleep 45 ; python3 ./app.py"   #120secondi prima di avviare il programma
    networks:
      - books

   #python libri
  applibri:
    build:
      context: libri/program/
      dockerfile: Dockerfile
    container_name: applibri
    image: ergiacky/microservizi:Applibri 
    restart: on-failure
    command:  sh -c "sleep 45 ; python3 ./app.py"   #120secondi prima di avviare il programma
    ports:
      - '4999:5000' #porta 4999 aperta verso l'esterno
    depends_on:
      - dblibri
      #- kafka #prende come riferimento il dbLibri  
    networks:
      - books 

    #db prstiti nosql 
  couchserver:
    image: couchdb
    restart: on-failure
    ports:
      - "5983:5984"
    environment:
      - COUCHDB_USER=alessio
      - COUCHDB_PASSWORD=password  #variabili che utilizza all'interno del db
    volumes:
        - ./dbdata:/opt/couchdb/data
    networks:
      - borrowings

    #prestiti python
  appprestiti:
    build: 
      context: prestiti/
      dockerfile: Dockerfile
    command:  sh -c "sleep 45 ; python3 ./app.py"
    restart: on-failure
    depends_on:
      - couchserver
    ports:
      - 4998:5000  #si espone alla porta 4998
    networks:
      - borrowings


networks:
  users:
    driver: bridge
  books:
    driver: bridge
  borrowings:
    driver: bridge






